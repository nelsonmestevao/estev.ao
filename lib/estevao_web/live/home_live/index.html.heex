<style>
  /* Animation */
  .parallax > use {
    animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)     infinite;
  }
  .parallax > use:nth-child(1) {
    animation-delay: -2s;
    animation-duration: 7s;
  }
  .parallax > use:nth-child(2) {
    animation-delay: -3s;
    animation-duration: 10s;
  }
  .parallax > use:nth-child(3) {
    animation-delay: -4s;
    animation-duration: 13s;
  }
  .parallax > use:nth-child(4) {
    animation-delay: -5s;
    animation-duration: 20s;
  }
  @keyframes move-forever {
    0% {
     transform: translate3d(-90px,0,0);
    }
    100% { 
      transform: translate3d(85px,0,0);
    }
  }
</style>
<div class="relative bg-gradient-to-r from-purple-700 to-cyan-500 text-center text-white">
  <div class="inner-header h-[60vh] m-0 flex w-full flex-col items-center justify-center p-0">
    <h1 class="z-10 mx-auto my-2 text-center text-5xl">
      <%= @name %>
    </h1>
    <p class="z-10 mx-auto my-2 text-center text-3xl">
      <%= @description %>
    </p>

    <.form
      :let={f}
      class="mx-auto mt-10 flex w-full max-w-screen-lg flex-col items-start space-y-6 lg:flex-row lg:items-center lg:space-x-4 lg:space-y-0"
      for={@form}
      id="link-form"
      phx-change="validate"
      phx-submit="create"
    >
      <div
        class="w-full items-center rounded-md p-2 text-sm lg:w-3/5"
        phx-feedback-for={f[:url].name}
      >
        <input
          type="text"
          name={f[:url].name}
          id={f[:url].id}
          value={Phoenix.HTML.Form.normalize_value("text", f[:url].value)}
          placeholder="Type your URL..."
          class={[
            "block w-full rounded-lg text-zinc-900 focus:ring-0 sm:text-sm sm:leading-6",
            "phx-no-feedback:border-zinc-300 phx-no-feedback:focus:border-zinc-400",
            f[:url].errors == [] && "border-zinc-300 focus:border-zinc-400",
            f[:url].errors != [] && "border-rose-500 focus:border-rose-600"
          ]}
        />
        <p
          :for={error_msg <- f[:url].errors}
          class="absolute mt-1 flex gap-3 text-sm leading-6 text-rose-500 phx-no-feedback:hidden"
        >
          <.icon name="hero-exclamation-circle-mini" class="mt-0.5 h-5 w-5 flex-none" />
          <%= translate_error(error_msg) %>
        </p>
      </div>
      <div class="flex w-full flex-col items-center md:flex-row lg:w-2/5 lg:items-center lg:space-x-4 lg:space-y-0">
        <div class="w-full rounded-md p-2 text-sm lg:w-3/5" phx-feedback-for={f[:slug].name}>
          <input
            type="text"
            name={f[:slug].name}
            id={f[:slug].id}
            value={Phoenix.HTML.Form.normalize_value("text", f[:slug].value)}
            placeholder="Optional slug..."
            class={[
              "block w-full rounded-lg text-zinc-900 focus:ring-0 sm:text-sm sm:leading-6",
              "phx-no-feedback:border-zinc-300 phx-no-feedback:focus:border-zinc-400",
              f[:slug].errors == [] && "border-zinc-300 focus:border-zinc-400",
              f[:slug].errors != [] && "border-rose-500 focus:border-rose-600"
            ]}
          />
          <p
            :for={error_msg <- f[:slug].errors}
            class="absolute mt-3 flex gap-3 text-sm leading-6 text-rose-500 phx-no-feedback:hidden"
          >
            <.icon name="hero-exclamation-circle-mini" class="mt-0.5 h-5 w-5 flex-none" />
            <%= translate_error(error_msg) %>
          </p>
        </div>
        <div class="mt-4 w-full rounded-md p-2 text-sm outline-none md:mt-0 lg:w-2/5">
          <button
            class={[
              "w-full phx-submit-loading:opacity-75 rounded-lg hover:bg-slate-950 bg-slate-900 py-2 px-3 uppercase",
              "text-sm font-semibold leading-6 text-white active:text-white/80"
            ]}
            phx-disable-with="Creating..."
          >
            Go
          </button>
        </div>
      </div>
    </.form>

    <div :if={@result} class="result">
      <a class="link" href={@result.link}>
        <%= String.split(@result.link, "://") |> Enum.at(1) %>
      </a>
      <button
        class={[
          "phx-submit-loading:opacity-75 rounded-lg bg-zinc-900 hover:bg-zinc-700 py-2 px-3",
          "text-sm font-semibold leading-6 text-white active:text-white/80"
        ]}
        type="button"
        onclick={"navigator.clipboard.writeText('#{@result.link}')"}
      >
        Copy
      </button>
    </div>
  </div>
  <!--Waves Container-->
  <div>
    <svg
      class="waves"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      viewBox="0 24 150 28"
      preserveAspectRatio="none"
      shape-rendering="auto"
    >
      <defs>
        <path
          id="gentle-wave"
          d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"
        />
      </defs>
      <g class="parallax">
        <use xlink:href="#gentle-wave" x="48" y="0" fill="rgba(255,255,255,0.7" />
        <use xlink:href="#gentle-wave" x="48" y="3" fill="rgba(255,255,255,0.5)" />
        <use xlink:href="#gentle-wave" x="48" y="5" fill="rgba(255,255,255,0.3)" />
        <use xlink:href="#gentle-wave" x="48" y="7" fill="#fff" />
      </g>
    </svg>
  </div>
  <!--Waves end-->
</div>
